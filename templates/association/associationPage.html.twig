{% extends 'base.html.twig' %}

{% block title %}Hello DashboardController!{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="pb-30">
    <header class="w-full h-100 md:h-60 relative bg-gradient-to-bl bg-green-400 rounded-b-2xl">
        <div class="w-40 h-40 rounded-full object-cover absolute -bottom-20 left-20">
            {% if association.logoUrl is not null %}
                <img id="openChangeImageModal" src="{{ association.logoUrl }}" alt="Image de profil" class="w-full h-full object-cover rounded-2xl">
            {% else %}
                <div id="openChangeImageModal" class="w-full h-full bg-black rounded-lg flex items-center justify-center">
                    <svg class="w-20 h-20 fill-white" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 12c2.21 0 4-1.79 4-4S14.21 4 12 4 8 5.79 8 8s1.79 4 4 4Zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4Z"/>
                    </svg>
                </div>
            {% endif %}

            {% if association.isValidated is true %}
                <div class="w-8 h-8 flex items-center justify-center absolute -bottom-2 -right-2 bg-green-500 border-4 text-white text-xs px-2 py-1 rounded-full">
                    <div class="w-6 h-6 flex items-center justify-center">
                        {{ ux_icon('lucide:check', { 'class': 'w-8 h-8' }) }}
                    </div>
                </div>
            {% else %}
                <div class="w-8 h-8 flex items-center justify-center absolute -bottom-2 -right-2 bg-red-500 border-4 text-white text-xs px-2 py-1 rounded-full">
                    <div class="w-6 h-6 flex items-center justify-center">
                        {{ ux_icon('lucide:x', { 'class': 'w-8 h-8' }) }}
                    </div>
                </div>
            {% endif %}
        </div>
    </header>
    <div class="mt-40 px-20 flex items-center justify-between">
        <div class="flex items-center gap-4">
            <p class="text-4xl font-semibold">{{ association.name }}</p>
            {% if isOwner %}
                <button id="openEditAssoModal" class="flex items-center gap-2 border border-gray-300 px-3 py-2 rounded-xl text-lg">
                    {{ ux_icon('lucide:edit-2', { 'class': 'w-5 h-5' }) }} Éditer
                </button>
            {% endif %}
            <a class="border border-gray-300 px-3 py-2 rounded-xl text-lg" href="{{ path('app_association_applications', {'id': association.id}) }}">Missions</a>
        </div>
        <!--<a href="#" class="text-3xl border-1 border-gray-300 px-8 py-4 rounded-2xl">Message</a>-->
        {% if isOwner %}
            <a href="#" id="openMissionModal" class="text-3xl border-1 border-gray-300 px-8 py-4 rounded-2xl">Ajouter mission</a>
        {% endif %}
    </div>
    <div class="px-20">
        <p class="text-2xl text-gray-600">{{ association.description ? association.description : 'Aucune description disponible.' }}</p>
    </div>
    <div>
        <div class="flex items-center gap-2 px-20 mt-5">
            {{ ux_icon('uil:calender', { 'class': 'w-8 text-gray-400' }) }}
            <span class="text-2xl text-gray-400">Créée le : {{ association.createdAt|date('d/m/Y') }}</span>
        </div>
    </div>

    <div class="px-20">
       {% if missions is not empty %}
          {% for mission in missions %}
                <div class="mt-10 p-6 bg-white rounded-lg shadow-md">
                    <h2 class="text-3xl font-semibold">{{ mission.name }} <strong class="font-normal text-gray-500 text-xl">({{ mission.volunteerNeeded }} volontaires)</strong></h2>
                    <p class="text-gray-600 mt-2 text-2xl">{{ mission.description }}</p>
                    <span class="text-lg text-gray-400">Du {{ mission.startAt|date('d/m/Y') }} au {{ mission.endAt|date('d/m/Y') }}</span>
                    <div class="flex items-center gap-1">
                        {% for domaine in mission.getDomains() %}
                            <p class="bg-gray-200 w-fit text-gray-700 text-sm px-3 py-1 rounded-full mt-2 mr-2">{{ domaine.name }}</p>
                        {% endfor %}
                    </div>
                    </div>
            {% endfor %}
        {% endif %}
    </div>

    <!-- Modal -->
    <div id="missionModal" class="hidden fixed inset-0 flex items-center justify-center z-50">
        <div class="bg-white rounded-2xl shadow-lg w-[90%] p-8 relative">

            <button id="closeMissionModal" class="absolute top-4 right-4 text-gray-500 hover:text-black text-2xl">&times;</button>

            <h2 class="text-3xl text-center font-semibold mb-6">Ajouter une nouvelle mission</h2>

            <div class="flex">
                <div class="w-1/6 flex">
                    <div class="w-20 h-20 bg-black rounded-full flex items-center justify-center">
                        {{ ux_icon('lucide:briefcase', { 'class': 'w-10 h-10 text-white' }) }}
                    </div>
                </div>

                <div class="w-5/6">
                    {{ form_start(form, { 'attr': { 'class': 'flex flex-col gap-4' } }) }}

                    {{ form_widget(form.name, {
                        'attr': {
                            'placeholder': 'Nom de la mission',
                            'class': 'rounded-lg bg-gray-200 px-4 py-2 text-xl focus:outline-none focus:ring-2 focus:ring-black/30'
                        }
                    }) }}

                    {{ form_widget(form.description, {
                        'attr': {
                            'placeholder': 'Description',
                            'class': 'bg-gray-200 rounded-lg px-4 py-2 text-xl focus:outline-none focus:ring-2 focus:ring-black/30',
                            'rows': 4
                        }
                    }) }}

                    <div class="flex gap-4">
                        {{ form_widget(form.volunteerNeeded, {
                            'attr': {
                                'placeholder': 'Nb bénévoles',
                                'class': 'w-1/3 rounded-lg bg-gray-200 px-4 py-2 text-xl focus:outline-none focus:ring-2 focus:ring-black/30'
                            }
                        }) }}

                        {{ form_widget(form.startAt, {
                            'attr': {
                                'class': 'w-1/3 rounded-lg bg-gray-200 px-4 py-2 text-xl focus:outline-none focus:ring-2 focus:ring-black/30'
                            }
                        }) }}

                        {{ form_widget(form.endAt, {
                            'attr': {
                                'class': 'w-1/3 rounded-lg bg-gray-200 px-4 py-2 text-xl focus:outline-none focus:ring-2 focus:ring-black/30'
                            }
                        }) }}
                    </div>

                    <div class="mt-4">
                        <label class="block text-xl mb-2">Domaines</label>
                        <div class="flex flex-wrap gap-4">
                            {{ form_widget(form.domains, {
                                'attr': {
                                    'class': 'flex flex-wrap gap-2'
                                }
                            }) }}
                        </div>
                    </div>

                    <button type="submit"
                            class="bg-black text-white py-3 rounded-lg text-xl hover:bg-green-600 transition mt-6">
                        Créer la mission
                    </button>

                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for editing association -->

    {% if isOwner and editForm is not null %}
        <div id="editAssoModal" class="hidden fixed inset-0 flex items-center justify-center z-50">
            <div class="bg-white rounded-2xl shadow-lg w-[90%] max-w-3xl p-8 relative">
                <button id="closeEditAssoModal" class="absolute top-4 right-4 text-gray-500 hover:text-black text-2xl">&times;</button>
                <h2 class="text-3xl text-center font-semibold mb-6">Éditer l’association</h2>
                {{ form_start(editForm, { 'attr': { 'class': 'flex flex-col gap-4' } }) }}
                {{ form_widget(editForm.name, { 'attr': { 'class': 'rounded-lg bg-gray-200 px-4 py-3 text-xl focus:outline-none focus:ring-2 focus:ring-black/30' } }) }}
                {{ form_widget(editForm.description, { 'attr': { 'class': 'rounded-lg bg-gray-200 px-4 py-3 text-xl focus:outline-none focus:ring-2 focus:ring-black/30', 'rows': 4 } }) }}
                {{ form_widget(editForm.rnaNumber, { 'attr': { 'class': 'rounded-lg bg-gray-200 px-4 py-3 text-xl focus:outline-none focus:ring-2 focus:ring-black/30' } }) }}
                <button type="submit" class="bg-black text-white py-3 rounded-lg text-xl hover:bg-green-600 transition mt-2">Enregistrer</button>
                {{ form_end(editForm) }}
            </div>
        </div>
    {% endif %}





</div>

    <script>
        const openEditBtn = document.getElementById('openEditAssoModal');
        const closeEditBtn = document.getElementById('closeEditAssoModal');
        const editAssoModal = document.getElementById('editAssoModal');
        if (openEditBtn && closeEditBtn && editAssoModal) {
            openEditBtn.addEventListener('click', (e) => { e.preventDefault(); editAssoModal.classList.remove('hidden'); });
            closeEditBtn.addEventListener('click', () => editAssoModal.classList.add('hidden'));
            window.addEventListener('click', (e) => { if (e.target === editAssoModal) editAssoModal.classList.add('hidden'); });
        }
    </script>



    <script>
        const openBtn = document.getElementById('openMissionModal');
        const closeBtn = document.getElementById('closeMissionModal');
        const modal = document.getElementById('missionModal');

        openBtn.addEventListener('click', (e) => {
            e.preventDefault();
            modal.classList.remove('hidden');
        });

        closeBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
        });

        window.addEventListener('click', (e) => {
            if (e.target === modal) modal.classList.add('hidden');
        });
    </script>



    <script>
        const imageInput = document.getElementById('post_imageFile');
        const preview = document.getElementById('imagePreview');

        if (imageInput) {
            imageInput.addEventListener('change', (event) => {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        preview.src = e.target.result;
                        preview.classList.remove('hidden');
                    };
                    reader.readAsDataURL(file);
                } else {
                    preview.src = '';
                    preview.classList.add('hidden');
                }
            });
        }

    </script>

{% endblock %}
